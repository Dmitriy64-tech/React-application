{"version":3,"sources":["components/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","API/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","Utilits/helpers/object-helper.js","redux/users-reducer.js","redux/auth-reduser.js","redux/app-reduser.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","img/36b78c8b7cd957e082f53148b74787ea.jpg","components/Users/User.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","img/preloader.svg","components/Preloader/Preloader.jsx","HOC/withAuthRedirect.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/common/FormControls/FormControls.js","components/Profile/MyPosts/Post/Post.jsx","Utilits/Validators/validators.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","App.js","index.js","components/Users/Users.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormControls/FormControls.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/Paginator/Paginator.module.css","components/Login/Login.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","axiosInstance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","Follow","id","post","unFollow","delete","getProfile","userId","console","warn","profileAPI","authAPI","email","password","rememberMe","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SET_PHOTO","initialState","posts","message","likesCount","profile","setUserStatusAC","type","profileReducer","state","action","newPostID","length","newPost","newPostBody","filter","p","postID","photos","photo","SEND_MESSAGE","dialogs","name","messages","dialogsReducer","newMessageID","body","newMessageBody","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","UNFOLLOW","FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","isFollowingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setIsFetching","toggleIsFollowing","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","totalCount","SET_USER_DATA","userID","login","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","INITIALIZED_SUCCESED","isInitialized","appReduser","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","s","header","to","activeClassName","activeLink","src","title","loginBlock","onClick","logout","HeaderContainer","this","React","Component","connect","Navbar","nav","item","active","User","user","unfollow","follow","avatar","small","userPhoto","disabled","some","followBTN","userInfo","aboutUser","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","cn","selectedPage","pageNumber","e","Users","onPageClick","Preloader","preloaderIMG","preloader","mapStateToPropsForRedirect","withAuthRedirect","AuthRedirect","GetUsers","createSelector","GetPageSize","GetTotalUsersCount","GetCurrentPage","GetIsFetching","GetIsFollowingInProgress","UsersContainer","page","getUsersOnPageClick","bind","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","autoFocus","onBlur","onChange","currentTarget","value","onDoubleClick","ProfileInfo","descriptionBlock","large","isOwner","file","target","files","profileName","fullName","lookingForAJobDescription","contacts","github","facebook","instagram","twitter","FormControl","meta","touched","error","children","hasError","formControl","TextArea","child","input","restProps","text","Input","CreateField","placeholder","validators","component","Field","validate","Post","likes","setLike","profilePH","postText","like","required","maxLengthCreator","maxLength","maxLenght","MyPosts","memo","postsElements","reverse","postsBlock","ReduxAddNewPostForm","onSubmit","values","addPost","reduxForm","handleSubmit","addPostArea","addPostBTN","MyPostsContainer","newPostText","addPostActionCreator","Profile","ProfileContainer","setUserProfile","params","loginedUserId","getUserProfile","prevProps","prevState","snapshot","withRouter","LoginReduxForm","remember","formSummaryError","loginBTN","logIn","stopSubmit","_error","DialogItem","path","activeDialog","person","Message","dialog","ReduxAddMessageForm","textButtonArea","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","sendMessage","sendMessageCreator","App","initilizeApp","render","DialogsContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e01089f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderIMG\":\"Preloader_preloaderIMG__34bRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__157BH\",\"item\":\"Navbar_item__3rQl_\",\"activeLink\":\"Navbar_activeLink__2oPsy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2E1W7\",\"dialogsItems\":\"Dialogs_dialogsItems__3e3N-\",\"messages\":\"Dialogs_messages__3hRA5\",\"message\":\"Dialogs_message__34Skv\",\"person\":\"Dialogs_person__MY6F1\",\"activeDialog\":\"Dialogs_activeDialog__1V244\",\"text\":\"Dialogs_text__3gLYe\",\"textButtonArea\":\"Dialogs_textButtonArea__3bwXc\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport { savePhoto } from '../redux/profile-reducer';\r\n\r\nconst axiosInstance = axios.create(\r\n    {\r\n        withCredentials: true,\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n        headers: { \"API-KEY\": \"97132c0f-39d9-4230-aaf8-d365f7c03dce\" }\r\n    }\r\n);\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return axiosInstance.get(`/users?page=${currentPage}&count=${pageSize}`).then(response => { return response.data })\r\n    },\r\n    Follow(id) {\r\n        return axiosInstance.post(`/follow/${id}`).then(response => { return response.data })\r\n    },\r\n    unFollow(id) {\r\n        return axiosInstance.delete(`/follow/${id}`).then(response => { return response.data })\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return axiosInstance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return axiosInstance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return axiosInstance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return axiosInstance.get(`/profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return axiosInstance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return axiosInstance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return axiosInstance.put(`profile/photo`, formData, {headers: \r\n            {\"Content-Type\": 'multipart/form-data'}} )\r\n    }\r\n}\r\n\r\n","import { profileAPI, usersAPI } from \"../API/api\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SET_PHOTO = 'SET_PHOTO'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, how are you?', likesCount: 12 },\r\n        { id: 2, message: 'It\\'s my first post', likesCount: 11 },\r\n        { id: 3, message: 'Blabla', likesCount: 11 },\r\n        { id: 4, message: 'Dada', likesCount: 11 }\r\n    ],\r\n    status: '',\r\n    profile: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPostID = state.posts.length;\r\n            let newPost = {\r\n                id: newPostID,\r\n                message: action.newPostBody,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n\r\n        }\r\n        case DELETE_POST: {\r\n\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postID)\r\n            };\r\n\r\n        }\r\n        case SET_STATUS: {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        }\r\n        case SET_PHOTO: {\r\n\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photo}\r\n            };\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostBody) => ({ type: ADD_POST, newPostBody })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setUserStatusAC = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postID) => ({ type: DELETE_POST, postID })\r\nexport const setUserPhoto = (photo) => ({ type: SET_PHOTO, photo })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setUserStatusAC(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatusAC(status));\r\n    }\r\n\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserPhoto(response.data.data.photos));\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Anna' },\r\n        { id: 2, name: 'Vitaliy' },\r\n        { id: 3, name: 'Ivan' },\r\n        { id: 4, name: 'Dima' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How are you?' },\r\n        { id: 3, message: 'Yo' },\r\n        { id: 4, message: 'Yo' },\r\n        { id: 5, message: 'Yo' }\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case SEND_MESSAGE:\r\n            let newMessageID = state.messages.length;\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: newMessageID, message: body }],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from \"../API/api\";\r\nimport { updateObjectInArray } from \"../Utilits/helpers/object-helper\";\r\n\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst FOLLOW = 'FOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [\r\n    ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true } )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false } )\r\n            }\r\n            \r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.totalCount }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                isFollowingInProgress: action.isFollowingInProgress\r\n                    ? [...state.isFollowingInProgress, action.userId]\r\n                    : state.isFollowingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => { return { type: FOLLOW, userId } }\r\nexport const unfollowSuccess = (userId) => { return { type: UNFOLLOW, userId } }\r\nexport const setUsers = (users) => { return { type: SET_USERS, users } }\r\nexport const setCurrentPage = (currentPage) => { return { type: SET_CURRENT_PAGE, currentPage } }\r\nexport const setTotalUsersCount = (totalCount) => { return { type: SET_TOTAL_USERS_COUNT, totalCount } }\r\nexport const setIsFetching = (isFetching) => { return { type: TOGGLE_IS_FETCHING, isFetching } }\r\nexport const toggleIsFollowing = (isFollowingInProgress, userId) => { return { type: TOGGLE_IS_FOLLOWING_PROGRESS, isFollowingInProgress, userId } }\r\n\r\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(setIsFetching(true));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    dispatch(setIsFetching(false));\r\n}\r\n\r\n\r\nexport const getUsersOnPageClick = (currentPage, pageSize) => async (dispatch) => {\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(setIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setIsFetching(false));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) =>{\r\n    dispatch(toggleIsFollowing(true, id));\r\n    let data = await apiMethod(id);\r\n    if (data.resultCode == 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toggleIsFollowing(false, id));\r\n}\r\n\r\nexport const follow = (id) => async (dispatch) => {\r\n    let apiMethod = usersAPI.Follow.bind(id);\r\n    followUnfollowFlow(dispatch, id, apiMethod, followSuccess);\r\n}\r\n\r\nexport const unfollow = (id) => async (dispatch) => {\r\n    let apiMethod = usersAPI.unFollow.bind(id);\r\n    followUnfollowFlow(dispatch, id, apiMethod, unfollowSuccess);\r\n}\r\n\r\n\r\n\r\nexport default usersReducer;","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../API/api\";\r\n\r\n\r\nconst SET_USER_DATA = '/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userID: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userID, email, login, isAuth) => { return { type: SET_USER_DATA, payload: { userID, email, login, isAuth } } }\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.authMe();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const logIn = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"Login\", { _error: message }));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./auth-reduser\";\r\n\r\nconst INITIALIZED_SUCCESED = 'INITIALIZED_SUCCESED';\r\n\r\nlet initialState = {\r\n    isInitialized: false\r\n};\r\n\r\nconst appReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESED:\r\n            return {\r\n                ...state,\r\n                isInitialized : true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESED})\r\n\r\nexport const initilizeApp = () => (dispatch) =>{\r\n    let dispatchPromise = dispatch(getAuthUserData());\r\n    dispatchPromise.then(()=>{\r\n        dispatch(initializedSuccess());\r\n    })\r\n    \r\n}\r\n\r\nexport default appReduser;","import { combineReducers, createStore } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reduser\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReduser from \"./app-reduser\";\r\nimport { applyMiddleware, compose } from 'redux';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReduser\r\n});\r\n\r\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n const store = createStore(reducers,composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n            <img src='https://www.vectorlogo.zone/logos/telegram/telegram-tile.svg' />\r\n        </NavLink>\r\n        <span className={s.title}>FakeTelegram</span>\r\n        <div className={s.loginBlock}> <NavLink to=\"/login\"> {props.isAuth \r\n        ? <div>{props.login} <button onClick={props.logout}>Log Out</button></div>  \r\n        : 'Log In'}</NavLink></div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport Header from './Header';\r\nimport { logout } from '../../redux/auth-reduser';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n\r\n    }\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/36b78c8b7cd957e082f53148b74787ea.e911d43c.jpg\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Users.module.css'\r\nimport userPhoto from 'D:\\\\Git Rep\\\\React-application\\\\src\\\\img\\\\36b78c8b7cd957e082f53148b74787ea.jpg'\r\n\r\nconst User = ({ user, isFollowingInProgress,unfollow, follow }) => {\r\n    return (\r\n        <div>\r\n            <div className={s.users}>\r\n                <div>\r\n                    <div>\r\n                        <NavLink to={\"/profile/\" + user.id}>\r\n                            <img className={s.avatar} src={user.photos.small != null ? user.photos.small : userPhoto}></img>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>{user.followed\r\n                        ? <button disabled={isFollowingInProgress\r\n                            .some(id => id === user.id)} className={s.followBTN} onClick={() => {\r\n                                unfollow(user.id);\r\n                            }} >Unfollow</button>\r\n                        : <button disabled={isFollowingInProgress\r\n                            .some(id => id === user.id)} className={s.followBTN} onClick={() => {\r\n                                follow(user.id);\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.userInfo}>\r\n                    <span className={s.aboutUser}>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n\r\n                    <span className={s.location}>\r\n                        <div>country</div>\r\n                        <div>city</div>\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default User","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport User from './User';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\n\r\n\r\nconst Users = ({ onPageClick, currentPage, totalUsersCount, pageSize, isFollowingInProgress, follow, unfollow, ...props }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                props.users.map(u => <User user={u}\r\n                    isFollowingInProgress = {isFollowingInProgress}\r\n                    follow = {follow}\r\n                    unfollow ={unfollow}\r\n                     key={u.id}/> )\r\n            }\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageClick} \r\n            totalItemsCount = {totalUsersCount} pageSize= {pageSize} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Users","export default __webpack_public_path__ + \"static/media/preloader.0c178750.svg\";","import React from 'react'\r\nimport preloader from 'D:\\\\Git Rep\\\\React-application\\\\src\\\\img\\\\preloader.svg'\r\nimport s from './Preloader.module.css'\r\n\r\nexport default function Preloader() {\r\n    return (\r\n        <div className={s.preloaderIMG}><img src={preloader}></img> </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class AuthRedirect extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return (\r\n                <Component {...this.props}/>\r\n            )\r\n        }\r\n    }\r\n    let ConnectedAuthRegirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirect)\r\n\r\n    return ConnectedAuthRegirectComponent;\r\n}\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst GetUsersSelector = (state)=>{\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const GetUsers= createSelector( GetUsersSelector, (users) =>{\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const GetPageSize = (state)=>{\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const GetTotalUsersCount = (state)=>{\r\n    return  state.usersPage.totalUsersCount;\r\n}\r\nexport const GetCurrentPage = (state)=>{\r\n    return  state.usersPage.currentPage;\r\n}\r\nexport const GetIsFetching = (state)=>{\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const GetIsFollowingInProgress = (state)=>{\r\n    return state.usersPage.isFollowingInProgress;\r\n}","import { connect } from 'react-redux'\r\nimport { getUsersOnPageClick, toggleIsFollowing, follow, unfollow, getUsers } from '../../redux/users-reducer'\r\nimport Users from './Users';\r\nimport React, { Component } from 'react'\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { GetIsFollowingInProgress,\r\n    GetIsFetching, \r\n    GetCurrentPage, \r\n    GetPageSize, \r\n    GetUsers, \r\n    GetTotalUsersCount \r\n} from '../../redux/users-selectors';\r\n\r\n\r\nclass UsersContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize } = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageClick = (page) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsersOnPageClick(page, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            {this.props.isFetching ? <Preloader /> :\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageClick={this.onPageClick}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    users={this.props.users}\r\n                    isFollowingInProgress={this.props.isFollowingInProgress}\r\n                />}\r\n\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: GetUsers(state),\r\n        pageSize: GetPageSize(state),\r\n        totalUsersCount: GetTotalUsersCount(state),\r\n        currentPage: GetCurrentPage(state),\r\n        isFetching: GetIsFetching(state),\r\n        isFollowingInProgress: GetIsFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        toggleIsFollowing,\r\n        getUsers,\r\n        getUsersOnPageClick\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode,setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode =() =>{\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode =() =>{\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) =>{\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {\r\n                editMode\r\n                    ? <div>\r\n                        <input  autoFocus={true}\r\n                        onBlur ={deactivateEditMode}\r\n                          onChange={onStatusChange} \r\n                          value={status}>\r\n                        </input>\r\n                    </div>\r\n                    : <div>\r\n                        <span onDoubleClick={activateEditMode}>\r\n                            {props.status || \"No status\"} \r\n                        </span>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from 'D:\\\\Git Rep\\\\React-application\\\\src\\\\img\\\\36b78c8b7cd957e082f53148b74787ea.jpg';\r\n\r\nconst ProfileInfo = (props) => {\r\n    const onAvatarSelected = (e)=> {\r\n        var file = e.target.files[0];\r\n        props.savePhoto(file);\r\n    }\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <div className={s.descriptionBlock}>\r\n                    <img className={s.avatar} src={props.profile.photos.large || userPhoto } ></img>\r\n                    <div>{props.isOwner \r\n                    ?  <input type=\"file\" onChange={onAvatarSelected}/> \r\n                    : \"\"}</div>\r\n                    <p className={s.profileName}>{props.profile.fullName}</p>\r\n                    <div className={s.status}><ProfileStatusWithHooks  status ={props.status}\r\n                    updateStatus ={props.updateStatus}/></div>\r\n                    <p>Looking for a job: {props.profile.lookingForAJobDescription}</p>\r\n                    <p>GitHub: {props.profile.contacts.github}</p>\r\n                    <p>FaceBook: {props.profile.contacts.facebook}</p>\r\n                    <p>Instagram: {props.profile.contacts.instagram}</p>\r\n                    <p>Twitter: {props.profile.contacts.twitter}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\"\r\nimport { Field } from \"redux-form\"\r\nimport s from \"./FormControls.module.css\"\r\n\r\nexport const FormControl = ({ meta :{touched, error}, children }) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children} \r\n            </div>\r\n            {hasError ? <span>{error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport const TextArea = (props) => {\r\n    const { child, input, meta, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}><textarea className={s.text} {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const { child, input, meta, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}><input className={s.text} {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, type = \"\") => {\r\n    return <Field validate={validators} \r\n     placeholder={placeholder} \r\n     name={name} \r\n     component={component}\r\n     type={type}></Field>\r\n}","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport userPhoto from 'D:\\\\Git Rep\\\\React-application\\\\src\\\\img\\\\36b78c8b7cd957e082f53148b74787ea.jpg';\r\n\r\nconst Post = (props) => {\r\n  const [likes, setLike] = React.useState(props.likesCount);\r\n  const putLike = () => {\r\n    if (likes == props.likesCount ) {\r\n      setLike(likes + 1);\r\n    }\r\n    else if(likes > props.likesCount)\r\n    {\r\n      setLike(likes - 1);\r\n    }\r\n  }\r\n  return (\r\n    <div className={s.item}>\r\n      <img className={s.profilePH} src={userPhoto} />\r\n      <span className={s.postText}>{props.message}</span>\r\n      <div>\r\n        <span onClick={putLike}><img className={s.like} src={\"https://i.pinimg.com/originals/39/44/6c/39446caa52f53369b92bc97253d2b2f1.png\"}></img></span>\r\n         <span className={s.likesCount}>{likes}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;"," export const required = (value) =>{\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength)=> (value) =>{\r\n    if ( value.length > maxLength) {\r\n        return `Max ${maxLength} symbols`\r\n    }\r\n    return undefined\r\n  }\r\n\r\nexport default required;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../../common/FormControls/FormControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport required, { maxLengthCreator } from \"D:\\\\Git Rep\\\\React-application\\\\src\\\\Utilits\\\\Validators\\\\validators.js\"\r\n\r\nconst maxLenght = maxLengthCreator(1000);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements =\r\n        [...props.posts].reverse().map(p => <Post key={p.message} message={p.message} likesCount={p.likesCount} />);\r\n\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n        values.newPostBody = \"\"\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <p>Write down the post:</p>\r\n                <ReduxAddNewPostForm onSubmit={addNewPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <div className={s.addPostArea}>\r\n            <Field validate={[required, maxLenght]} placeholder=\"New Post\" component={TextArea} name=\"newPostBody\" />\r\n        </div>\r\n        <button className={s.addPostBTN}>Add post</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddNewPostForm = reduxForm({ form: \"addPost\" })(AddNewPostForm)\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n            isOwner ={props.isOwner}\r\n            profile={props.profile} \r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n            savePhoto = {props.savePhoto} />\r\n\r\n            \r\n            <MyPostsContainer \r\n            profile={props.profile}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react'\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    setUserProfile = () => {\r\n        let userId = this.props.match.params.userID\r\n        if (!userId) {\r\n            userId = this.props.loginedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setUserProfile();\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID != prevProps.match.params.userID) {\r\n            this.setUserProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userID}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        loginedUserId: state.auth.userID,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import React from 'react'\r\nimport s from './Login.module.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { CreateField, Input } from '../common/FormControls/FormControls'\r\nimport required, { maxLengthCreator } from '../../Utilits/Validators/validators'\r\nimport { connect } from 'react-redux'\r\nimport { logIn } from '../../redux/auth-reduser'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.logIn(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login Form</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                {CreateField(\"Email\", \"email\", [required], Input)}\r\n            </div>\r\n            <div>\r\n                {CreateField(\"Password\", \"password\", [required], Input, \"password\")}\r\n            </div>\r\n            <div>\r\n                {CreateField(null, \"rememberMe\", [], \"input\", \"checkbox\", s.remember)}remember me\r\n            </div>\r\n            { error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button className={s.loginBTN}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n)\r\n\r\n\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'Login'\r\n})(LoginForm)\r\n\r\nexport default connect(mapStateToProps, { logIn })(Login); ","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div >\r\n        <NavLink activeClassName={s.activeDialog} className={s.person} to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../common/FormControls/FormControls';\r\nimport {required, maxLengthCreator } from '../../Utilits/Validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    let addNewMessageChange = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n        values.newMessageBody =\"\";\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <ReduxAddMessageForm onSubmit={addNewMessageChange} />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nconst maxLenght = maxLengthCreator(1000);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit} className={s.textButtonArea}>\r\n                <Field validate={[required, maxLenght]} component={TextArea} name=\"newMessageBody\" />\r\n                <div><button>Send</button></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ReduxAddMessageForm = reduxForm({form: \"sendMessage\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport Login from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initilizeApp } from './redux/app-reduser';\r\nimport Preloader from './components/Preloader/Preloader';\r\nimport { withSuspense } from './HOC/withSuspense';\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initilizeApp();\r\n    }\r\n    render() {\r\n        if (!this.props.isInitialized) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer />\r\n                <Navbar />\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                        render={() => {\r\n                            return <DialogsContainer />\r\n                        }} />\r\n\r\n                    <Route path='/profile/:userID?'\r\n                        render={() => <ProfileContainer />} />\r\n\r\n                    <Route path='/users'\r\n                        render={() => <UsersContainer />} />\r\n                    <Route path='/login'\r\n                        render={() => <Login />} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isInitialized: state.app.isInitialized\r\n})\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { initilizeApp })\r\n)(App);","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageBTN\":\"Users_pageBTN__3jsUH\",\"followBTN\":\"Users_followBTN__3wR1w\",\"getUsersBTN\":\"Users_getUsersBTN__21NM3\",\"userInfo\":\"Users_userInfo__2H1Nn\",\"users\":\"Users_users__36A9F\",\"avatar\":\"Users_avatar__n4B1c\",\"aboutUser\":\"Users_aboutUser__3ZqWS\",\"location\":\"Users_location__3WQI5\",\"selectedPage\":\"Users_selectedPage__1AQX8\",\"page\":\"Users_page__1QsaK\",\"preloader\":\"Users_preloader__1BDAh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3vmwz\",\"profilePH\":\"Post_profilePH__3UCF8\",\"postText\":\"Post_postText__N8KPb\",\"like\":\"Post_like__xqKg3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__o1S2-\",\"title\":\"Header_title__JxuRg\",\"loginBlock\":\"Header_loginBlock__2JIDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3dCa2\",\"avatar\":\"ProfileInfo_avatar__2yRcv\",\"profileName\":\"ProfileInfo_profileName__1RgKY\",\"status\":\"ProfileInfo_status__2Y-B-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2MWe9\",\"error\":\"FormControls_error__3Ztry\",\"formSummaryError\":\"FormControls_formSummaryError__2TFZp\",\"text\":\"FormControls_text__2SF-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__GVH_v\",\"posts\":\"MyPosts_posts__3JNgW\",\"addPostBTN\":\"MyPosts_addPostBTN__4Hplh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__PhbMb\",\"pageNumber\":\"Paginator_pageNumber__Wdc0H\",\"paginator\":\"Paginator_paginator__29S8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"email\":\"Login_email__1L1dZ\",\"pass\":\"Login_pass__RENn2\",\"remember\":\"Login_remember__2ISws\",\"formSummaryError\":\"Login_formSummaryError__6n6nu\",\"loginBTN\":\"Login_loginBTN__3Sip5\"};"],"sourceRoot":""}